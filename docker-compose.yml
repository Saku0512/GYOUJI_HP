version: '3.8'

services:
  traefik:
    image: "traefik:v2.10"
    container_name: "traefik"
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.myresolver.acme.email=${LETSENCRYPT_EMAIL}" # IMPORTANT: Change this in .env file!
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080" # For Traefik dashboard
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./letsencrypt:/letsencrypt"
    networks:
      - web

  # MySQL データベースサービス
  mysql:
    image: mysql:8.0
    container_name: tournament-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_CHARACTER_SET_SERVER: utf8mb4
      MYSQL_COLLATION_SERVER: utf8mb4_unicode_ci
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./backend/migrations:/docker-entrypoint-initdb.d
    networks:
      - web
      - backend
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${DB_ROOT_PASSWORD}"]
      timeout: 20s
      retries: 10

  # バックエンドAPIサービス
  backend:
    build: ./backend
    container_name: tournament-backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "nc -z localhost 8080 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    environment:
      DB_HOST: mysql
      DB_PORT: 3306
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRATION_HOURS: ${JWT_EXPIRATION_HOURS:-24}
      JWT_ISSUER: ${JWT_ISSUER:-tournament-backend}
      SERVER_PORT: 8080
      SERVER_HOST: 0.0.0.0
    ports:
      - "8081:8080"
    depends_on:
      mysql:
        condition: service_healthy
    labels:
      - "traefik.enable=true"
      
      # API用HTTPルーター
      - "traefik.http.routers.backend-http.rule=Host(`nitsche-gyouji.com`) && PathPrefix(`/api`)"
      - "traefik.http.routers.backend-http.entrypoints=web"
      - "traefik.http.routers.backend-http.middlewares=redirect-to-https"
      
      # API用HTTPSルーター
      - "traefik.http.routers.backend-https.rule=Host(`nitsche-gyouji.com`) && PathPrefix(`/api`)"
      - "traefik.http.routers.backend-https.entrypoints=websecure"
      - "traefik.http.routers.backend-https.tls.certresolver=myresolver"
      
      # サービス設定
      - "traefik.http.services.backend.loadbalancer.server.port=8080"
    networks:
      - web
      - backend

  # フロントエンドサービス（SvelteKit + Nginx）
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: production
      args:
        NODE_ENV: production
        BUILD_DATE: ${BUILD_DATE:-}
        VCS_REF: ${VCS_REF:-}
    container_name: tournament-frontend
    restart: unless-stopped
    depends_on:
      backend:
        condition: service_healthy
    environment:
      # 本番環境用環境変数
      NODE_ENV: production
      VITE_API_BASE_URL: /api
      VITE_APP_TITLE: Tournament Management System
      VITE_ENABLE_POLLING: "true"
      VITE_POLLING_INTERVAL: "30000"
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    # セキュリティ設定
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp:noexec,nosuid,size=100m
      - /var/cache/nginx:noexec,nosuid,size=50m
      - /var/run:noexec,nosuid,size=10m
    # リソース制限
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 64M
    labels:
      - "traefik.enable=true"
      
      # HTTP用のルーター（HTTPSリダイレクト）
      - "traefik.http.routers.frontend-http.rule=Host(`nitsche-gyouji.com`)"
      - "traefik.http.routers.frontend-http.entrypoints=web"
      - "traefik.http.routers.frontend-http.middlewares=redirect-to-https,security-headers"
      
      # HTTPS用のルーター
      - "traefik.http.routers.frontend-https.rule=Host(`nitsche-gyouji.com`)"
      - "traefik.http.routers.frontend-https.entrypoints=websecure"
      - "traefik.http.routers.frontend-https.tls.certresolver=myresolver"
      - "traefik.http.routers.frontend-https.middlewares=security-headers,compression"
      
      # ミドルウェア設定
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.permanent=true"
      
      # セキュリティヘッダー
      - "traefik.http.middlewares.security-headers.headers.frameDeny=true"
      - "traefik.http.middlewares.security-headers.headers.contentTypeNosniff=true"
      - "traefik.http.middlewares.security-headers.headers.browserXssFilter=true"
      - "traefik.http.middlewares.security-headers.headers.referrerPolicy=strict-origin-when-cross-origin"
      - "traefik.http.middlewares.security-headers.headers.customRequestHeaders.X-Forwarded-Proto=https"
      
      # 圧縮設定
      - "traefik.http.middlewares.compression.compress=true"
      
      # サービス設定
      - "traefik.http.services.frontend.loadbalancer.server.port=80"
      - "traefik.http.services.frontend.loadbalancer.healthcheck.path=/health"
      - "traefik.http.services.frontend.loadbalancer.healthcheck.interval=30s"
    networks:
      - web

volumes:
  mysql_data:
    driver: local

networks:
  web:
    driver: bridge
  backend:
    driver: bridge