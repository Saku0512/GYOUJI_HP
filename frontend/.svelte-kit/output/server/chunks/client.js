import{w as e}from"./index.js";const t={notifications:[],loading:!1,theme:"light"},s=e(t);let r=0;const n={showNotification:(e,t="info",i=5e3)=>{const a={id:++r,message:e,type:t,timestamp:Date.now()};return s.update(e=>({...e,notifications:[...e.notifications,a]})),i>0&&setTimeout(()=>{n.removeNotification(a.id)},i),a.id},removeNotification:e=>{s.update(t=>({...t,notifications:t.notifications.filter(t=>t.id!==e)}))},setLoading:e=>{s.update(t=>({...t,loading:Boolean(e)}))},clearNotifications:()=>{s.update(e=>({...e,notifications:[]}))},setTheme:e=>{"light"!==e&&"dark"!==e||(s.update(t=>({...t,theme:e})),"undefined"!=typeof localStorage&&localStorage.setItem("ui-theme",e))},loadTheme:()=>{if("undefined"!=typeof localStorage){const e=localStorage.getItem("ui-theme");!e||"light"!==e&&"dark"!==e||n.setTheme(e)}},reset:()=>{s.set(t)}},i="NETWORK_ERROR",a="API_ERROR",o="VALIDATION_ERROR",h="AUTHENTICATION_ERROR",l="AUTHORIZATION_ERROR",u="TIMEOUT_ERROR",c="PARSE_ERROR",d="UNKNOWN_ERROR",m="CLIENT_ERROR",p="SERVER_ERROR",E={LOW:"low",MEDIUM:"medium",HIGH:"high",CRITICAL:"critical"};class y extends Error{constructor(e,t=d,s=E.MEDIUM,r=null){super(e),this.name="AppError",this.type=t,this.level=s,this.details=r,this.timestamp=(new Date).toISOString(),this.userAgent="undefined"!=typeof navigator?navigator.userAgent:"Unknown"}toJSON(){return{name:this.name,message:this.message,type:this.type,level:this.level,details:this.details,timestamp:this.timestamp,userAgent:this.userAgent,stack:this.stack}}}const R=new class{constructor(){this.errorListeners=[],this.retryAttempts=new Map,this.maxRetryAttempts=3,this.retryDelay=1e3,this.isInitialized=!1}initialize(){this.isInitialized||"undefined"==typeof window||(window.addEventListener("error",this.handleGlobalError.bind(this)),window.addEventListener("unhandledrejection",this.handleUnhandledRejection.bind(this)),window.addEventListener("auth:unauthorized",this.handleAuthError.bind(this)),this.isInitialized=!0)}addErrorListener(e){this.errorListeners.push(e)}removeErrorListener(e){const t=this.errorListeners.indexOf(e);t>-1&&this.errorListeners.splice(t,1)}handleGlobalError(e){const t=new y(e.message||"JavaScript実行エラーが発生しました",m,E.HIGH,{filename:e.filename,lineno:e.lineno,colno:e.colno,error:e.error});this.handleError(t)}handleUnhandledRejection(e){const t=new y(e.reason?.message||"Promise処理でエラーが発生しました",m,E.HIGH,{reason:e.reason,promise:e.promise});this.handleError(t),e.preventDefault()}handleAuthError(e){const t=new y("認証が無効になりました。再度ログインしてください。",h,E.MEDIUM);this.handleError(t)}handleError(e,t={}){return e instanceof y||(e=this.normalizeError(e)),Object.keys(t).length>0&&(e.details={...e.details,context:t}),this.logError(e),this.notifyErrorListeners(e),this.notifyUser(e),e.level===E.CRITICAL&&this.handleCriticalError(e),e}normalizeError(e){if(e instanceof y)return e;let t=d,s=E.MEDIUM,r=e.message||"エラーが発生しました";return"TypeError"===e.name&&e.message.includes("fetch")?(t=i,r="ネットワークエラーが発生しました"):"AbortError"===e.name?(t=u,r="リクエストがタイムアウトしました"):"SyntaxError"===e.name&&(t=c,r="データの解析に失敗しました"),new y(r,t,s,{originalError:e,stack:e.stack})}logError(e){e.timestamp,e.type,e.level,e.message,e.details,e.stack;e.level}notifyErrorListeners(e){this.errorListeners.forEach(t=>{try{t(e)}catch(s){}})}notifyUser(e){if(e.level===E.LOW)return;let t="error";e.level===E.MEDIUM&&(t="warning");const s=this.getUserFriendlyMessage(e);n.showNotification(s,t,8e3)}getUserFriendlyMessage(e){switch(e.type){case i:return"インターネット接続を確認してください。";case u:return"リクエストがタイムアウトしました。しばらく待ってから再試行してください。";case h:return"認証が必要です。ログインしてください。";case l:return"この操作を実行する権限がありません。";case o:return"入力内容を確認してください。";case p:return"サーバーエラーが発生しました。しばらく待ってから再試行してください。";default:return e.message||"エラーが発生しました。"}}handleCriticalError(e){}async retry(e,t,s=this.maxRetryAttempts){const r=this.retryAttempts.get(t)||0;try{const s=await e();return this.retryAttempts.delete(t),s}catch(n){if(r<s){this.retryAttempts.set(t,r+1);const n=this.retryDelay*Math.pow(2,r);return await new Promise(e=>setTimeout(e,n)),this.retry(e,t,s)}throw this.retryAttempts.delete(t),new y(`操作が${s}回失敗しました: ${n.message}`,d,E.HIGH,{originalError:n,attempts:s})}}resetErrorBoundary(e){this.retryAttempts.delete(e)}cleanup(){"undefined"!=typeof window&&(window.removeEventListener("error",this.handleGlobalError.bind(this)),window.removeEventListener("unhandledrejection",this.handleUnhandledRejection.bind(this)),window.removeEventListener("auth:unauthorized",this.handleAuthError.bind(this))),this.errorListeners=[],this.retryAttempts.clear(),this.isInitialized=!1}},g=(e,t={})=>{let s=a,r=E.MEDIUM;e.status>=400&&e.status<500?(s=m,401===e.status?s=h:403===e.status?s=l:422===e.status&&(s=o)):e.status>=500&&(s=p,r=E.HIGH);const n=new y(e.message||`HTTP ${e.status}: ${e.statusText}`,s,r,{status:e.status,statusText:e.statusText,error:e.error,details:e.details,...t});return R.handleError(n,t)};const f=new class{constructor(e="http://localhost:8080/api"){this.baseURL=e,this.token=null,this.requestInterceptors=[],this.responseInterceptors=[],this.defaultTimeout=3e4,this.retryConfig={maxAttempts:3,retryableErrors:[i,u],retryDelay:1e3}}setToken(e){this.token=e}getToken(){return this.token}addRequestInterceptor(e){this.requestInterceptors.push(e)}addResponseInterceptor(e){this.responseInterceptors.push(e)}getHeaders(e={}){const t={"Content-Type":"application/json",...e};return this.token&&(t.Authorization=`Bearer ${this.token}`),t}async applyRequestInterceptors(e){let t={...e};for(const r of this.requestInterceptors)try{t=await r(t)}catch(s){}return t}async applyResponseInterceptors(e){let t=e;for(const r of this.responseInterceptors)try{t=await r(t)}catch(s){}return t}async request(e,t={}){const s=`${this.baseURL}${e}`,r=`${t.method||"GET"}-${e}-${Date.now()}`,n={method:"GET",headers:this.getHeaders(t.headers),signal:this.createAbortSignal(t.timeout||this.defaultTimeout),...t},i=await this.applyRequestInterceptors(n);return this.shouldRetryRequest(t)?(a=()=>this.executeRequest(s,i),o=r,h=this.retryConfig.maxAttempts,R.retry(a,o,h)):this.executeRequest(s,i);var a,o,h}async executeRequest(e,t){try{const s=await fetch(e,t),r=await this.applyResponseInterceptors(s);return await this.handleResponse(r)}catch(s){return this.handleError(s)}}createAbortSignal(e){if("undefined"==typeof AbortController)return;const t=new AbortController;return e>0&&setTimeout(()=>{t.abort()},e),t.signal}shouldRetryRequest(e){if(!1===e.retry)return!1;const t=(e.method||"GET").toUpperCase();return"GET"===t||"HEAD"===t||!0===e.retry}async get(e,t={}){return this.request(e,{...t,method:"GET"})}async post(e,t,s={}){return this.request(e,{...s,method:"POST",body:t?JSON.stringify(t):void 0})}async put(e,t,s={}){return this.request(e,{...s,method:"PUT",body:t?JSON.stringify(t):void 0})}async delete(e,t={}){return this.request(e,{...t,method:"DELETE"})}async patch(e,t,s={}){return this.request(e,{...s,method:"PATCH",body:t?JSON.stringify(t):void 0})}async handleResponse(e){const t=e.headers.get("content-type");try{let s;if(s=t&&t.includes("application/json")?await e.json():await e.text(),e.ok)return{success:!0,data:s,status:e.status,statusText:e.statusText};{const t={success:!1,error:s.error||"HTTP_ERROR",message:s.message||`HTTP ${e.status}: ${e.statusText}`,status:e.status,statusText:e.statusText,details:s.details||null};return g(t),t}}catch(s){const t={success:!1,error:"PARSE_ERROR",message:"レスポンスの解析に失敗しました",status:e.status,statusText:e.statusText,details:s.message};return new y(t.message,c,E.MEDIUM,t.details),g(t),t}}handleError(e){let t;return"TypeError"===e.name&&e.message.includes("fetch")?(t={success:!1,error:"NETWORK_ERROR",message:"ネットワークエラーが発生しました。接続を確認してください。",details:e.message},((e,t={})=>{const s=new y("ネットワーク接続に問題があります",i,E.MEDIUM,{originalError:e,...t});R.handleError(s,t)})(e)):"AbortError"===e.name?(t={success:!1,error:"TIMEOUT_ERROR",message:"リクエストがタイムアウトしました。",details:e.message},new y(t.message,u,E.MEDIUM,{originalError:e}),g(t)):(t={success:!1,error:"UNKNOWN_ERROR",message:"予期しないエラーが発生しました。",details:e.message},new y(t.message,d,E.HIGH,{originalError:e}),g(t)),t}async healthCheck(){try{return(await this.get("/health")).success}catch(e){return!1}}};f.addRequestInterceptor(async e=>e),f.addResponseInterceptor(async e=>(401===e.status&&(f.setToken(null),"undefined"!=typeof window&&localStorage.removeItem("auth_token"),"undefined"!=typeof window&&window.dispatchEvent(new CustomEvent("auth:unauthorized"))),e));export{E,n as a,f as b,s as u};
