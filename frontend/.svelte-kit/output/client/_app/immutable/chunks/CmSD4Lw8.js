import{R as e}from"./D2AUiy-P.js";import{av as t,a2 as n}from"./VVabkdHj.js";import{d as r}from"./JJD-QFX9.js";const s=new class{constructor(e=r){this.client=e,this.tokenKey="auth_token",this.refreshTokenKey="refresh_token",this.userKey="auth_user"}getStoredToken(){return"undefined"==typeof window?null:localStorage.getItem(this.tokenKey)}getStoredRefreshToken(){return"undefined"==typeof window?null:localStorage.getItem(this.refreshTokenKey)}getStoredUser(){if("undefined"==typeof window)return null;const e=localStorage.getItem(this.userKey);try{return e?JSON.parse(e):null}catch(t){return null}}storeToken(e,t=null,n=null){"undefined"!=typeof window&&(localStorage.setItem(this.tokenKey,e),t&&localStorage.setItem(this.refreshTokenKey,t),n&&localStorage.setItem(this.userKey,JSON.stringify(n)),this.client.setToken(e))}clearStoredAuth(){"undefined"!=typeof window&&(localStorage.removeItem(this.tokenKey),localStorage.removeItem(this.refreshTokenKey),localStorage.removeItem(this.userKey),this.client.setToken(null))}isTokenExpired(e){if(!e)return!0;try{const t=JSON.parse(atob(e.split(".")[1])),n=Math.floor(Date.now()/1e3);return t.exp<n}catch(t){return!0}}initializeAuth(){const e=this.getStoredToken();return e&&!this.isTokenExpired(e)?(this.client.setToken(e),!0):(e&&this.clearStoredAuth(),!1)}async login(e,t){try{const n=await this.client.post("/auth/login",{username:e,password:t});if(n.success&&n.data){const{token:e,refresh_token:t,user:r}=n.data;return this.storeToken(e,t,r),{success:!0,data:{token:e,refresh_token:t,user:r},message:"ログインに成功しました"}}return n}catch(n){return{success:!1,error:"LOGIN_ERROR",message:"ログインに失敗しました",details:n.message}}}async logout(){try{return this.getStoredToken()&&await this.client.post("/auth/logout"),this.clearStoredAuth(),"undefined"!=typeof window&&window.dispatchEvent(new CustomEvent("auth:logout")),{success:!0,message:"ログアウトしました"}}catch(e){return this.clearStoredAuth(),{success:!0,message:"ログアウトしました",warning:"サーバーとの通信でエラーが発生しましたが、ローカルの認証情報はクリアされました"}}}async refreshToken(){try{const e=this.getStoredRefreshToken();if(!e)return{success:!1,error:"NO_REFRESH_TOKEN",message:"リフレッシュトークンが見つかりません"};const t=await this.client.post("/auth/refresh",{refresh_token:e});if(t.success&&t.data){const{token:n,refresh_token:r,user:s}=t.data;return this.storeToken(n,r||e,s),{success:!0,data:{token:n,refresh_token:r||e,user:s},message:"トークンを更新しました"}}return this.clearStoredAuth(),t}catch(e){return this.clearStoredAuth(),{success:!1,error:"REFRESH_ERROR",message:"トークンの更新に失敗しました",details:e.message}}}async validateToken(){try{const e=this.getStoredToken();if(!e)return{success:!1,error:"NO_TOKEN",message:"トークンが見つかりません"};if(this.isTokenExpired(e)){const e=await this.refreshToken();return e.success?{success:!0,data:e.data,message:"トークンを更新して検証しました"}:{success:!1,error:"TOKEN_EXPIRED",message:"トークンの期限が切れています"}}const t=await this.client.get("/auth/validate");return t.success?{success:!0,data:t.data,message:"トークンは有効です"}:(this.clearStoredAuth(),t)}catch(e){return{success:!1,error:"VALIDATION_ERROR",message:"トークンの検証に失敗しました",details:e.message}}}getAuthState(){const e=this.getStoredToken(),t=this.getStoredUser();return{isAuthenticated:!(!e||this.isTokenExpired(e)),token:e,user:t}}setupAutoRefresh(e=50){if("undefined"==typeof window)return;setInterval(async()=>{const e=this.getStoredToken();if(e&&!this.isTokenExpired(e))try{const t=JSON.parse(atob(e.split(".")[1])),n=Math.floor(Date.now()/1e3);t.exp-n<600&&await this.refreshToken()}catch(t){}},60*e*1e3)}};"undefined"!=typeof window&&(s.initializeAuth(),s.setupAutoRefresh());const o="tournament_auth_token",a="tournament_user_data";function i(e,t){try{const n=JSON.stringify(t);return localStorage.setItem(e,n),!0}catch(n){return!1}}function c(e,t=null){try{const n=localStorage.getItem(e);return null===n?t:JSON.parse(n)}catch(n){return t}}function u(e){try{return localStorage.removeItem(e),!0}catch(t){return!1}}function d(e){return i(o,e)}function h(){return c(o)}function l(e){return i(a,e)}function f(){return c(a)}function g(){u(o),u(a)}const w={isAuthenticated:!1,token:null,user:null,loading:!1};const m=function(){const{subscribe:e,set:r,update:o}=t(w);return{subscribe:e,setLoading:e=>{o(t=>({...t,loading:e}))},setAuthState:e=>{o(t=>({...t,isAuthenticated:!!e.token,token:e.token,user:e.user,loading:!1}))},clearAuth:()=>{r({...w})},login:async e=>{o(e=>({...e,loading:!0}));try{const t=await s.login(e.username,e.password);if(t.success){t.data.token,t.data.user;return d(t.data.token),l(t.data.user),o(e=>({...e,isAuthenticated:!0,token:t.data.token,user:t.data.user,loading:!1})),t}return o(e=>({...e,loading:!1})),t}catch(t){return o(e=>({...e,loading:!1})),{success:!1,error:"LOGIN_STORE_ERROR",message:"ログイン処理でエラーが発生しました",details:t.message}}},logout:async()=>{o(e=>({...e,loading:!0}));try{const e=await s.logout();return g(),r({...w}),e}catch(e){return g(),r({...w}),{success:!0,message:"ログアウトしました",warning:"サーバーとの通信でエラーが発生しましたが、ローカルの認証情報はクリアされました"}}},checkAuthStatus:async()=>{o(e=>({...e,loading:!0}));try{const e=h(),t=f();if(!e)return o(e=>({...e,loading:!1})),{success:!1,error:"NO_TOKEN",message:"トークンが見つかりません"};const n=await s.validateToken();return n.success?(o(r=>({...r,isAuthenticated:!0,token:e,user:n.data?.user||t,loading:!1})),n):(g(),r({...w}),n)}catch(e){return g(),r({...w}),{success:!1,error:"AUTH_CHECK_ERROR",message:"認証状態の確認でエラーが発生しました",details:e.message}}},refreshToken:async()=>{if(n({subscribe:e}).loading)return{success:!1,error:"ALREADY_LOADING",message:"既に処理中です"};o(e=>({...e,loading:!0}));try{const e=await s.refreshToken();if(e.success){e.data.token,e.data.user;return d(e.data.token),l(e.data.user),o(t=>({...t,isAuthenticated:!0,token:e.data.token,user:e.data.user,loading:!1})),e}return g(),r({...w}),e}catch(t){return g(),r({...w}),{success:!1,error:"REFRESH_STORE_ERROR",message:"トークンの更新でエラーが発生しました",details:t.message}}},initialize:async function(){const e=h(),t=f();e&&t&&await this.checkAuthStatus()}}}();function k(t,n){throw new e(t,n.toString())}function y(e){if(!e)return!0;try{const t=JSON.parse(atob(e.split(".")[1])),n=Math.floor(Date.now()/1e3),r=300;return t.exp<n+r}catch(t){return!0}}async function p(e,t={}){const r=await async function(e,t={}){const{redirectTo:n="/login",allowExpired:r=!1,checkServer:s=!0}=t;if("undefined"==typeof window)return{authenticated:!1};const o=h();if(!o)throw k(302,`${n}?redirect=${encodeURIComponent(e.pathname+e.search)}`);if(!r&&y(o))try{if(!(await m.refreshToken()).success)throw k(302,`${n}?expired=true&redirect=${encodeURIComponent(e.pathname+e.search)}`)}catch(a){throw k(302,`${n}?expired=true&redirect=${encodeURIComponent(e.pathname+e.search)}`)}if(s)try{if(!(await m.checkAuthStatus()).success)throw k(302,`${n}?invalid=true&redirect=${encodeURIComponent(e.pathname+e.search)}`)}catch(a){throw k(302,`${n}?error=true&redirect=${encodeURIComponent(e.pathname+e.search)}`)}return{authenticated:!0}}(e,t);if(!r.authenticated)return r;const s=n(m).user;if(!s||"admin"!==s.role)throw k(302,"/login?unauthorized=true");return{authenticated:!0,isAdmin:!0}}function S(e,t={}){const{redirectTo:n="/admin",checkExpired:r=!0}=t;if("undefined"==typeof window)return{shouldRedirect:!1};const s=h();if(s&&(!r||!y(s))){throw k(302,e.searchParams.get("redirect")||n)}return{shouldRedirect:!1}}function T(){if("undefined"==typeof window)return;let e,t;return t=async()=>{if(!document.hidden){if(h())try{!(await m.checkAuthStatus()).success&&window.location.pathname.startsWith("/admin")&&(window.location.href="/login?session_expired=true")}catch(e){}}},document.addEventListener("visibilitychange",t),e=setInterval(async()=>{const e=h();if(e&&y(e))try{(await m.refreshToken()).success||(await m.logout(),window.location.pathname.startsWith("/admin")&&(window.location.href="/login?expired=true"))}catch(t){await m.logout(),window.location.pathname.startsWith("/admin")&&(window.location.href="/login?error=true")}},6e4),()=>{e&&clearInterval(e),t&&document.removeEventListener("visibilitychange",t)}}async function R(e="/login"){try{await m.logout(),"undefined"!=typeof window&&(window.location.href=e)}catch(t){"undefined"!=typeof window&&(window.location.href=e+"?logout_error=true")}}"undefined"!=typeof window&&(m.initialize(),window.addEventListener("auth:logout",()=>{m.clearAuth()}),document.addEventListener("visibilitychange",()=>{if(!document.hidden){h()&&m.checkAuthStatus()}}));export{m as a,p as b,R as p,S as r,T as s};
