import{h as u,at as R,au as w,av as _,aw as v,ax as E,ay as I}from"./BqLxJNge.js";import{w as N}from"./CT_lE3Pl.js";function m(e){var t,s,r="";if(typeof e=="string"||typeof e=="number")r+=e;else if(typeof e=="object")if(Array.isArray(e)){var o=e.length;for(t=0;t<o;t++)e[t]&&(s=m(e[t]))&&(r&&(r+=" "),r+=s)}else for(s in e)e[s]&&(r&&(r+=" "),r+=s);return r}function A(){for(var e,t,s=0,r="",o=arguments.length;s<o;s++)(e=arguments[s])&&(t=m(e))&&(r&&(r+=" "),r+=t);return r}function U(e){return typeof e=="object"?A(e):e??""}const p=[...` 	
\r\f \v\uFEFF`];function S(e,t,s){var r=e==null?"":""+e;if(t&&(r=r?r+" "+t:t),s){for(var o in s)if(s[o])r=r?r+" "+o:o;else if(r.length)for(var i=o.length,n=0;(n=r.indexOf(o,n))>=0;){var a=n+i;(n===0||p.includes(r[n-1]))&&(a===r.length||p.includes(r[a]))?r=(n===0?"":r.substring(0,n))+r.substring(a+1):n=a}}return r===""?null:r}function H(e,t){return e==null?null:String(e)}function x(e,t,s,r,o,i){var n=e.__className;if(u||n!==s||n===void 0){var a=S(s,r,i);(!u||a!==e.getAttribute("class"))&&(a==null?e.removeAttribute("class"):e.className=a),e.__className=s}else if(i&&o!==i)for(var l in i){var h=!!i[l];(o==null||h!==!!o[l])&&e.classList.toggle(l,h)}return i}const O=Symbol("is custom element"),q=Symbol("is html");function $(e){if(u){var t=!1,s=()=>{if(!t){if(t=!0,e.hasAttribute("value")){var r=e.value;g(e,"value",null),e.value=r}if(e.hasAttribute("checked")){var o=e.checked;g(e,"checked",null),e.checked=o}}};e.__on_r=s,E(s),I()}}function g(e,t,s,r){var o=b(e);u&&(o[t]=e.getAttribute(t),t==="src"||t==="srcset"||t==="href"&&e.nodeName==="LINK")||o[t]!==(o[t]=s)&&(t==="loading"&&(e[R]=s),s==null?e.removeAttribute(t):typeof s!="string"&&k(e).includes(t)?e[t]=s:e.setAttribute(t,s))}function b(e){return e.__attributes??={[O]:e.nodeName.includes("-"),[q]:e.namespaceURI===w}}var y=new Map;function k(e){var t=e.getAttribute("is")||e.nodeName,s=y.get(t);if(s)return s;y.set(t,s=[]);for(var r,o=e,i=Element.prototype;i!==o;){r=v(o);for(var n in r)r[n].set&&s.push(n);o=_(o)}return s}class C{constructor(t="http://localhost:8080/api"){this.baseURL=t,this.token=null,this.requestInterceptors=[],this.responseInterceptors=[]}setToken(t){this.token=t}getToken(){return this.token}addRequestInterceptor(t){this.requestInterceptors.push(t)}addResponseInterceptor(t){this.responseInterceptors.push(t)}getHeaders(t={}){const s={"Content-Type":"application/json",...t};return this.token&&(s.Authorization=`Bearer ${this.token}`),s}async applyRequestInterceptors(t){let s={...t};for(const r of this.requestInterceptors)try{s=await r(s)}catch(o){console.error("Request interceptor error:",o)}return s}async applyResponseInterceptors(t){let s=t;for(const r of this.responseInterceptors)try{s=await r(s)}catch(o){console.error("Response interceptor error:",o)}return s}async request(t,s={}){const r=`${this.baseURL}${t}`,o={method:"GET",headers:this.getHeaders(s.headers),...s},i=await this.applyRequestInterceptors(o);try{const n=await fetch(r,i),a=await this.applyResponseInterceptors(n);return await this.handleResponse(a)}catch(n){return this.handleError(n)}}async get(t,s={}){return this.request(t,{...s,method:"GET"})}async post(t,s,r={}){return this.request(t,{...r,method:"POST",body:s?JSON.stringify(s):void 0})}async put(t,s,r={}){return this.request(t,{...r,method:"PUT",body:s?JSON.stringify(s):void 0})}async delete(t,s={}){return this.request(t,{...s,method:"DELETE"})}async patch(t,s,r={}){return this.request(t,{...r,method:"PATCH",body:s?JSON.stringify(s):void 0})}async handleResponse(t){const s=t.headers.get("content-type");try{let r;return s&&s.includes("application/json")?r=await t.json():r=await t.text(),t.ok?{success:!0,data:r,status:t.status,statusText:t.statusText}:{success:!1,error:r.error||"HTTP_ERROR",message:r.message||`HTTP ${t.status}: ${t.statusText}`,status:t.status,statusText:t.statusText,details:r.details||null}}catch(r){return{success:!1,error:"PARSE_ERROR",message:"レスポンスの解析に失敗しました",status:t.status,statusText:t.statusText,details:r.message}}}handleError(t){return console.error("API Client Error:",t),t.name==="TypeError"&&t.message.includes("fetch")?{success:!1,error:"NETWORK_ERROR",message:"ネットワークエラーが発生しました。接続を確認してください。",details:t.message}:t.name==="AbortError"?{success:!1,error:"TIMEOUT_ERROR",message:"リクエストがタイムアウトしました。",details:t.message}:{success:!1,error:"UNKNOWN_ERROR",message:"予期しないエラーが発生しました。",details:t.message}}async healthCheck(){try{return(await this.get("/health")).success}catch{return!1}}}const d=new C;d.addRequestInterceptor(async e=>e);d.addResponseInterceptor(async e=>(e.status===401&&(d.setToken(null),typeof window<"u"&&localStorage.removeItem("auth_token"),typeof window<"u"&&window.dispatchEvent(new CustomEvent("auth:unauthorized"))),e));const T={notifications:[],loading:!1,theme:"light"},c=N(T);let L=0;const f={showNotification:(e,t="info",s=5e3)=>{const r={id:++L,message:e,type:t,timestamp:Date.now()};return c.update(o=>({...o,notifications:[...o.notifications,r]})),s>0&&setTimeout(()=>{f.removeNotification(r.id)},s),r.id},removeNotification:e=>{c.update(t=>({...t,notifications:t.notifications.filter(s=>s.id!==e)}))},setLoading:e=>{c.update(t=>({...t,loading:!!e}))},clearNotifications:()=>{c.update(e=>({...e,notifications:[]}))},setTheme:e=>{if(e!=="light"&&e!=="dark"){console.warn('Invalid theme. Only "light" and "dark" are supported.');return}c.update(t=>({...t,theme:e})),typeof localStorage<"u"&&localStorage.setItem("ui-theme",e)},loadTheme:()=>{if(typeof localStorage<"u"){const e=localStorage.getItem("ui-theme");e&&(e==="light"||e==="dark")&&f.setTheme(e)}},reset:()=>{c.set(T)}},j=(e,t)=>f.showNotification(e,"success",t),B=(e,t)=>f.showNotification(e,"error",t);export{d as a,g as b,B as c,j as d,c as e,U as f,$ as r,x as s,H as t,f as u};
