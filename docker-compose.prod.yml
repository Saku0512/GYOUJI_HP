# docker-compose.prod.yml (修正案)

services:
  # 本番環境用MySQL設定
  mysql:
    restart: always
    # environmentはdocker-compose.ymlから継承されるので不要
    volumes:
      # mysql_dataをmysql_prod_dataで上書き
      - mysql_prod_data:/var/lib/mysql
      # マイグレーション設定は継承されるので不要
    ports: [] # ポートを閉じる上書き
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # 本番環境用バックエンド設定
  backend:
    restart: always
    environment:
      # GIN_MODEだけを追加 (他の変数は.envファイルで管理)
      GIN_MODE: release
    ports: [] # ポートを閉じる上書き
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # 本番環境用フロントエンド設定
  frontend:
    # buildセクションは継承されるので不要
    restart: always
    environment:
      # 本番で追加したい環境変数だけを記述
      VITE_ENABLE_CSP: "true"
      VITE_ENABLE_HTTPS_REDIRECT: "true"
      VITE_LOG_LEVEL: warn
      VITE_ENABLE_ANALYTICS: "false"
      VITE_ENABLE_DEBUG: "false"
    ports: [] # ポートを閉じる上書き
    tmpfs:
      # セキュリティを考慮し、noexecに修正
      - /tmp:noexec,nosuid,size=50m
      - /var/cache/nginx:noexec,nosuid,size=25m
      - /var/run:noexec,nosuid,size=5m
    deploy:
      resources:
        # リソース制限を上書き
        limits:
          cpus: '0.3'
          memory: 128M
        reservations:
          cpus: '0.05'
          memory: 32M
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "3"
        compress: "true"

volumes:
  # 本番用のボリュームを新たに追加
  mysql_prod_data:
    driver: local